0000 :		mov.e r31, #1760			// Setup stack pointer
	_Main__:
0002 :		mov r0, #5				// expr `argst 0, 5`
0003 :		add r31, r31, #0
0004 :		call _Fib__:
0005 :		sub r31, r31, #0				// expr `call Fib`
0006 :		mov r0, #5				// expr `mov u_t__0, 5`
0007 :		stw r0, r31, #0
0008 :		mov r0, #7				// expr `argst 0, 7`
0009 :		mov r1, #7				// expr `argst 1, 7`
000A :		add.e r31, r31, #96
000C :		call _AssertEql__:
000D :		sub.e r31, r31, #96				// expr `call AssertEql`
000F :		stw.e r0, r31, #32				// clobbering r0 (`t2`)
0011 :		ldw r0, r31, #0				// assign r0 = `u_t__0`	// expr `retst 0, u_t__0`
0012 :		ret 				// expr `ret`
	_Fib__:
0013 :		eq r0, #1				// expr `eq x, 1`
0014 :		c.jmp L4:				// expr `c.jmp L4:`
	_L7:
0015 :		jmp L6:				// expr `jmp L6:`
	L6:
0016 :		eq r0, #0				// expr `eq x, 0`
0017 :		c.jmp L4:				// expr `c.jmp L4:`
	_L9:
0018 :		jmp L5:				// expr `jmp L5:`
	L4:
0019 :		mov r0, #1				// expr `retst 0, 1`
001A :		ret 				// expr `ret`
	L5:
001B :		sub r1, r0, #2				// expr `sub t13, x, 2`
001C :		stw r0, r31, #0				// clobbering r0 (`x`)
001D :		mov r0, r1				// assign r0 = `t13`	// expr `argst 0, t13`
001E :		add.e r31, r31, #64
0020 :		call _Fib__:
0021 :		sub.e r31, r31, #64				// expr `call Fib`
0023 :		ldw r2, r31, #0				// assign r2 = `x`
0024 :		sub r1, r2, #1				// expr `sub t15, x, 1`
0025 :		stw.e r0, r31, #64				// clobbering r0 (`t14`)
0027 :		mov r0, r1				// assign r0 = `t15`	// expr `argst 0, t15`
0028 :		add.e r31, r31, #160
002A :		call _Fib__:
002B :		sub.e r31, r31, #160				// expr `call Fib`
002D :		ldw.e r2, r31, #64				// assign r2 = `t14`
002F :		add r1, r2, r0				// expr `add t17, t14, t16`
0030 :		mov r0, r1				// assign r0 = `t17`	// expr `retst 0, t17`
0031 :		ret 				// expr `ret`
	_AssertEql__:
0032 :		ne r0, r1				// expr `ne act, exp`
0033 :		c.jmp L19:				// expr `c.jmp L19:`
	_L21:
0034 :		jmp L20:				// expr `jmp L20:`
	L19:
0035 :		susp 				// expr `susp`
	L20:
0036 :		ret 				// expr `ret`
