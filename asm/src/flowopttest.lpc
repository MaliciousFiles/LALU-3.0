fn HSB(x: u32) u32 {
  var bit: u32;
  //assume atleastonce;
  for (var tbit: u32 = 1; tbit != 0; tbit <<= 1) {
    if (x & tbit != 0) bit = tbit;
  }
  return bit;
}

fn Main() u32 {
  var x: u32;
  var magic = HSB(7); //4
  var ary: u16[2];
  if (magic == 4) {
    x = 3;
  }
  ary[0] = 0;

  for (var i: u32 = 0; i < 1000; i += 1) {
    if (i > x) {
      x = i;
      break;
    }
  } else assume unreachable;

  return x + ary[1];
}